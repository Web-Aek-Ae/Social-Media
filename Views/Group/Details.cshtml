@{
    ViewData["Title"] = "Group Page";
    Layout = "~/Views/Shared/_LayoutGroup.cshtml";
}
@model SocialMedia.ViewModels.DetailsModels
<head>
    <link rel="stylesheet" href="~/css/group.css" asp-append-version="true">
</head>
<div class="group-element">
    <div class="header">
        <div class="search">
            <div class="search-bar">
                <i class="fa fa-search"></i>
                <input type="text" placeholder="Search" id="search-input">
            </div>
        </div>
    </div>


    <div class="Group-details-header">
            <a asp-action="Index" asp-controller="Group"><img src="~/src/images/Backicon.svg" class="back-recommend"></a>
            @if (Model.Group != null)
            {
                <h1>@Model.Group.Name</h1>
            @if (Model.Group.Members.All(m => m.UserId != (int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int userId) ? userId : 0))){

            <button class="group-rec-button-details" onclick="" GroupId="@Model.Group.GroupId">join group</button>
            }
            @if (Model.Group.UserId == (int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int userId) ? userId : 0))
            {
                <div class="threedots">
                    <button onclick="dropdown()" class="dropdownBtn"></button>
                    <div class="dropdown-content">
                        <a href="">
                            <img src="~/src/images/EditIcon.svg">
                            <p>edit</p>
                        </a>
                        <a class="delete-group">
                            <img src="~/src/images/binIcon.svg">
                            <p>delete group</p>
                        </a>
                    </div>
                </div>
            }
           
                
            
            }  
    </div>
    <div class="Group-details">
        @if (Model.Group != null)
            {
                <p id="description">@Model.Group.Description</p>
            } 
    </div>
    <div class="addPostIcon">
        @if (Model.Group != null){
                <a asp-action="Create" asp-controller="Post" asp-route-id="@Model.Group.GroupId"><img src="~/src/images/AddPostIcon.svg"></a>
        }
    </div>
    <div class= "events">
        <h2>Upcoming events</h2>
        <div class="container-post">
            @if(Model.Posts != null){

            @foreach (var post in Model.Posts)
            {
                <a class="link" asp-action="Post" asp-controller="Home" asp-route-id="@post.PostId" style="text-decoration: none; color:black;">
                    <div class="post">
                        <div class="card-post">
                            <img src="@post.Image" alt="activity" class="activity">
                            <div class="content">
                                <div class="post-header">
                                    <div class="date">
                                        <h3 class="month">@post.Date.ToString("MMM").ToUpper()</h3>
                                        <h3 class="day">@post.Date.Day</h3>
                                        <h3 class="year">@post.Date.Year</h3>
                                    </div>
                                    <div class="topic">
                                        <h1>@post.Title</h1>
                                        <p>@post.Time.ToString("HH:mm"), @post.Location</p>
                                    </div>
                                </div>
                                <div class="description-post">
                                    <p>@post.Content</p>
                                    <div class="owner">
                                        <img src="@post.User.Image"
                                            alt="" id="owner-profile">
                                        <span>@post.User.Name</span>
                                    </div>
                                    <div class="action">
                                    @using System.Security.Claims
                                    @if (post.JoinActivities.Any(l => l.UserId == (int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int userId) ? userId : 0)))
                                    {
                                                    <button  data-postid="@post.PostId" class="joined-button" >joined</button>
                                    }
                                    else
                                    {
                                                    <button data-postid="@post.PostId"  class="join-button" >join activity</button>
                                    }
                                        <div class="likes">
                                            <button data-postid="@post.PostId" class="like-button">
                                            @if (post.PostLikes.Any(l => l.UserId == (int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int userId) ? userId : 0)))
                                            {
                                                        <img src="@Url.Content("~/src/images/LikedIcon.svg")" class="icon" >

                                            }
                                            else
                                            {
                                                        <img src="@Url.Content("~/src/images/LikeIcon.svg")" class="icon" >
                                            }

                                            </button>
                                            <span class="likeCount">@post.PostLikes.Count
                                                <div class="dropdownLike">

                                                    @foreach (var like in post.PostLikes.ToList())
                                                    {
                                                        <div class="member">
                                                            @if (like.User != null)
                                                                {
                                                                    <img src="@like.User.Image">
                                                                    <h5>@like.User.Name</h5>
                                                                }
                                                                else
                                                                {
                                                                    <h5>User not found.</h5>
                                                                }

                                                        </div>
                                                    }
                                                    
                                                </div>
                                            </span>
                                        </div>
                                        <div class="participant">
                                            <img src="@Url.Content("~/src/images/People_in_postcardIcon.svg")" class="icon"/>
                                            <div class="participantCount">
                                                <span class="joined">@post.JoinActivities.Count </span>
                                                <span class="max"> / @post.MaxPeople</span>
                                                    <div class="dropdownParticipant">
                                                        @foreach (var joinActivity in post.JoinActivities)
                                                        {
                                                            <div class="member">
                                                                <img src="@joinActivity.User.Image">
                                                                <h5>@joinActivity.User.Name</h5>
                                                            </div>
                                                        }                                        
                                                    </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>

            }
            }
        </div>
    </div>
</div>
<div class="delete-group-pop-up">
    <div id="delete">
        <p>Are you sure to delete <br>this group?</p>
        @if(Model.Group != null){

        <button id="btnDelete" class="accept" onclick="" data-id="@Model.Group.GroupId">Delete group</button>
        }
        <button id="btnCancle" class="cancel">Cancel</button>
    </div>
</div>
<div class="popup-backdrop"></div>
@section Scripts {
<script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll("button.group-rec-button-details").forEach(function (button) {
                button.addEventListener("click", function (event) {
                    event.preventDefault();
                    var groupId = button.getAttribute("GroupId");

                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", '/Group/JoinGroup/' + groupId, true);

                    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                    xhr.onload = function () {
                        if (xhr.status >= 200 && xhr.status < 300) {
                            var data = JSON.parse(xhr.responseText);
                            if (data.success) {
                                button.classList.add("group-button");
                                button.classList.remove("group-rec-button");
                                button.style.display = "none";
                                button.addEventListener('click',function(event){
                                viewgrouponclick(event);
                                });
                            } else {
                                alert("Failed to Join Group: " + data.message);
                            }
                        } else {
                            alert("An error occurred while joining the group. Please try again later.");
                        }
                    };

                    xhr.onerror = function () {
                        alert("An error occurred while joining the group. Please try again later.");
                    };

                    xhr.send();
                });
            });
        });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
    // Handle like button clicks
    document.querySelectorAll('.like-button').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            var postId = this.getAttribute('data-postid');
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/PostLike/LikePost'); // Adjust the URL to match your routing
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function() {
                if (xhr.status === 200) {
                    var result = JSON.parse(xhr.responseText);
                    console.log(result);
                    var imgSrc = result.liked ? '/src/images/LikedIcon.svg' : '/src/images/LikeIcon.svg'; // Adjust the paths as necessary
                    button.querySelector('img').setAttribute('src', imgSrc);
                    button.nextElementSibling.textContent = result.likeCount;
                    console.log("Post liked successfully");
                    
                } else {
                    console.log("Error liking post: " + xhr.statusText);
                }
            };
            xhr.send('postId=' + postId);
        });
    });

    // Handle join and unjoin activity button clicks
    function handleJoinActivity(button, isJoin) {
        var postId = button.getAttribute('data-postid');
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/JoinActivity/JoinActivity'); // Adjust the URL to match your routing
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onload = function() {
            if (xhr.status === 200) {
                var result = JSON.parse(xhr.responseText);
                console.log(result);
                if (result.success) {
                    button.textContent = result.joined ? 'joined' : 'join activity';
                    button.classList.toggle('join-button', !result.joined);
                    button.classList.toggle('joined-button', result.joined);
                    button.parentNode.parentNode.querySelector('.joined').textContent = result.joinActivitiesCount;
                    console.log(result.joined ? "Post joined successfully" : "Post unjoined successfully");
                    
                }
            } else {
                console.log("Error joining activity: " + xhr.statusText);
            }
        };
        xhr.send('postId=' + postId);
    }

    // Initial bindings for join buttons
    document.querySelectorAll('.join-button').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            handleJoinActivity(this, true);
        });
    });

    document.querySelectorAll('.joined-button').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            handleJoinActivity(this, false);
        });
    });

    document.querySelectorAll('.group-rec-button-details').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            handleJoinActivity(this, true);
        });
    });

    document.querySelectorAll('.group-rec-button-details').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            handleJoinActivity(this, false);
        });
    });
});

</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
    var acceptButtons = document.querySelectorAll(".accept");

    acceptButtons.forEach(function(button) {
        button.addEventListener("click", function(event) {
            event.preventDefault(); // Prevent the default form submission
            
            var groupId = this.getAttribute("data-id");
            var formData = {
                GroupId: groupId
            };
            console.log(formData.GroupId);

            // Basic validation example
            if (formData.GroupId == null) {
                alert("Content are required.");
                return; // Exit the function to prevent sending the request
            }

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Group/DeleteGroup", true); // Modify with your correct URL
            xhr.setRequestHeader("Content-Type", "application/json");

            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.success) {
                        // Optionally, redirect or clear form here
                        window.location.href = '/Group/Index'; // Adjust controller and action names as necessary
                    } else {
                        alert("Failed to delete group: " + response.message);
                    }
                } else if (xhr.readyState === 4) {
                    console.log("Error: ", xhr.responseText);
                    alert("There was an error processing your request.");
                }
            };

            xhr.send(JSON.stringify(formData));
        });
    });
});
</script>
<script>
/* When the user clicks on the button, 
toggle between hiding and showing the dropdown content */

function dropdown() {

    var dropdowns = document.getElementsByClassName("dropdown-content");
    var dropdownBtn = document.getElementsByClassName("dropdownBtn");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
        console.log(dropdowns[i])
        var openDropdown = dropdowns[i];
        openDropdown.classList.toggle('show');
        dropdownBtn[i].classList.toggle('focus');
    }
}

// Close the dropdown if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropdownBtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var dropdownBtn = document.getElementsByClassName("dropdownBtn");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
        console.log(dropdowns[i])
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
        dropdownBtn[i].classList.remove('focus');
      }
    }
  }
}
</script>
<script src="~/lib/deleteGroup.js"></script>
}
